#include <iostream>
#include <iomanip>

using namespace std;

int RandomNumber(int From, int To)
{
    int randNum = rand() % (To - From + 1) + From;
    return randNum;
}

void FillMatrixWithRandomNumber(int matrix[3][3], short rows, short cols)
{
    for (short i = 0; i < rows; i++)
    {
        for (short j = 0; j < cols; j++)
        {
            matrix[i][j] = RandomNumber(1, 10);
        }
    }
}

void MultiplyMatrix(int MultiMatrix[3][3], int matrix1[3][3], int matrix2[3][3], short rows, short cols)
{
    for (short i = 0; i < rows; i++)
    {
        for (short j = 0; j < cols; j++)
        {
            MultiMatrix[i][j] = matrix1[i][j] * matrix2[i][j];
        }
        cout << "\n";
    }
}

void PrintMatrix(int matrix[3][3], short rows, short cols, short NumOfMatrix)
{ 
    
    cout << "Matrix" << NumOfMatrix  << ":" << endl;
    for (short i = 0; i < rows; i++)
    { 
        for (short j = 0; j < cols; j++)
        {
            cout << setw(3) << matrix[i][j] << "\t";
        }
        cout << "\n";
    }

}
int main()
{
    srand(static_cast<unsigned int>(time(0)));

    int matrix1[3][3];
    int matrix2[3][3];
    int MultiMatrix[3][3];

    FillMatrixWithRandomNumber(matrix1, 3, 3);
    FillMatrixWithRandomNumber(matrix2, 3, 3);

    PrintMatrix(matrix1, 3, 3, 1);
    PrintMatrix(matrix2, 3, 3, 2);
    
    MultiplyMatrix(MultiMatrix, matrix1, matrix2, 3, 3);
    cout << " -------------------------------------------- \n";
    cout << "Results Of ";
    PrintMatrix(MultiMatrix, 3, 3 , 3);
    
}
